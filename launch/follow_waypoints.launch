<launch>
  <arg name="output" default="screen"/>
  <arg name="goal_frame_id" default="map"/>
  <arg name="wait_duration" default="0.0"/>
  <arg name="waypoint_distance_tolerance" default="0.0"/>
  <arg name="waypoints_to_follow_topic" default="/initialpose"/>
  <arg name="waypoints_list_topic" default="/waypoints"/>
  <arg name="waypoints_are_poses" default="true"/>
  <arg name="patrol_mode" default="false"/>

  <param name="goal_frame_id" value="$(arg goal_frame_id)"/>
  <param name="wait_duration" value="$(arg wait_duration)"/>
  <param name="waypoint_distance_tolerance" value="$(arg waypoint_distance_tolerance)"/>
  <param name="waypoints_to_follow_topic" value="$(arg waypoints_to_follow_topic)"/>
  <param name="waypoints_list_topic" value="$(arg waypoints_list_topic)"/>
  <param name="waypoints_are_poses" value="$(arg waypoints_are_poses)" type="bool"/>
  <param name="patrol_mode" value="$(arg patrol_mode)" type="bool"/>

  <node pkg="follow_waypoints" type="follow_waypoints" name="follow_waypoints" output="$(arg output)" required="true"/>

  <node name="$(anon dynparam)" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters follow_waypoints">
    <param name="patrol_mode" type="bool" value="$(arg patrol_mode)" />
  </node>

  <arg name="map_file" value="/home/adat/catkin_ws/src/fetch_ros/maps/aims-ada.yaml">
  </arg> 
  <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)"> 
  </node>


<!-- Required things for Fetch -->

    <!-- Navigation requires at least one map.
       In addition, it is sometimes desirable to have a "keepout" map
       which is used for costmaps, but not localization -->
  <arg name="map_file" default="$(find fetch_maps)/maps/3_1_16_localization.yaml" />
  <arg name="map_keepout_file" default="$(find fetch_maps)/maps/3_1_16_keepout.yaml" />
  <arg name="use_keepout" default="false" />
  <arg name="launch_map_server" default="true" />
  <arg name="use_map_topic"  default="false" />

  <!-- Navigation parameter files -->
  <arg name="move_base_include" default="$(find fetch_navigation)/launch/include/move_base.launch.xml" />
  <arg name="amcl_include" default="$(find fetch_navigation)/launch/include/amcl.launch.xml" />

  <!-- set topics -->
  <arg name="scan_topic" default="base_scan" />
  <arg name="map_topic" default="map" />
  <arg name="cmd_vel_topic" default="cmd_vel" />
  <arg name="odom_topic" default="odom" />

  <group if="$(arg launch_map_server)">
    <!-- serve up a map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!-- serve up a map with keepout zones -->
    <group if="$(arg use_keepout)" >
    <node name="map_keepout_server" pkg="map_server" type="map_server" args="$(arg map_keepout_file)" >
      <remap from="map" to="map_keepout" />
      <remap from="static_map" to="static_map_keepout" />
    </node>
    </group>
  </group>

  <!-- localize the robot -->
  <include file="$(arg amcl_include)" >
    <arg name="scan_topic" value="$(arg scan_topic)" />
    <arg name="map_topic" value="$(arg map_topic)" />
    <arg name="use_map_topic" value="$(arg use_map_topic)" />
  </include>
</launch>
